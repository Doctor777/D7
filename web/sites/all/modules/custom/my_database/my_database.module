<?php

/**
 * Implements hook_menu().
 */
function my_database_menu()
{
    $items['my_database/insert'] = array(
        'title' => 'Page for insert data',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('my_database_insert_form'),
        'access arguments' => array('administer site configuration'),
    );

    $items['my_database/%/update'] = array(
        'title' => 'We can update the row at this page',
        'title callback' => 'my_database_update_page_title',
        'title arguments' => array(1),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('my_database_update_form', 1),
        'access arguments' => array('administer site configuration'),
    );

    $items['my_database/%/delete'] = array(
        'title' => 'The row can be deleted',
        'title callback' => 'my_database_delete_page_title',
        'title arguments' => array(1),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('my_database_delete_form', 1),
        'access arguments' => array('administer site configuration'),
    );

    $items['my_database'] = array(
        'title' => 'Table with data',
        'page callback' => 'my_database_table_data_page',
        'access arguments' => array('administer site configuration'),
    );

    $items['my_database/'] = array(
        'title' => 'My database',
        'page callback' => 'my_database_table_data_page',
        'access callback' => TRUE,
        'menu_name' => 'main-menu',
        'weight' => '10',
    );

    $items['my_database/insert'] = array(
        'title' => 'Add to database',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('my_database_insert_form'),
        'access callback' => TRUE,
        'menu_name' => 'main-menu',
        'type' => MENU_LOCAL_ACTION,
    );
    return $items;
}

/**
 * Build form for insert data.
 */
function my_database_insert_form($form, &$form_state)
{
    $form = array();
    $form['number'] = array(
        '#title' => t('Number'),
        '#type' => 'textfield',
        '#maxlength' => 10,
        '#description' => t('Only numbers'),
        '#required' => TRUE,
    );
    $form['teaser'] = array(
        '#title' => t('Teaser'),
        '#type' => 'textfield',
        '#maxlength' => 150,
        '#required' => TRUE,
    );
    $form['text'] = array(
        '#title' => t('Text'),
        '#type' => 'textarea',
        '#required' => TRUE,
    );
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Submit'),
    );
    $form['cancel'] = array(
        '#markup' => l(t('Cancel'), 'my_database'),
    );

    return $form;
}

/**
 * Validate for my_database_insert_form.
 */
function my_database_insert_form_validate($form, &$form_state)
{
    if (!ctype_digit($form_state['values']['number'])) {
        form_set_error('number', t('Field "number" must contains an integer.'));
    }
}

/**
 * Submit for my_database_insert_form.
 */
function my_database_insert_form_submit($form, &$form_state)
{
    $query = db_insert('my_database')
        ->fields(array(
            'number' => $form_state['values']['number'],
            'teaser' => $form_state['values']['teaser'],
            'text' => $form_state['values']['text'],
        ))
        ->execute();
    if ($query > 0) {
        drupal_set_message(t('Data has been successfully sent.'));
    } else {
        drupal_set_message(t("Data hasn't been sent."), 'error');
    }
}

function my_database_update_form($form, $form_state)
{
    $form = array();
    $id = $form_state['build_info']['args'][0];

    $data = db_select('my_database', 'm')
        ->condition('m.id', $id)
        ->fields('m')
        ->execute()
        ->fetchAssoc();

    if (empty($data) || empty($data['number'])) {
        $placeholders = array(
            '@id' => $id,
            '!back' => l(t('Go back'), 'my_database'),
        );
        $form['text'] = array(
            '#markup' => t('Undefined "@id" id. !back.', $placeholders),
        );
        return $form;
    }

    $form['number'] = array(
        '#title' => t('Number'),
        '#type' => 'textfield',
        '#maxlength' => 10,
        '#description' => t('Only numbers'),
        '#required' => TRUE,
        '#default_value' => $data['number'],
    );
    $form['teaser'] = array(
        '#title' => t('Teaser'),
        '#type' => 'textfield',
        '#maxlength' => 150,
        '#required' => TRUE,
        '#default_value' => $data['teaser'],
    );
    $form['text'] = array(
        '#title' => t('Text'),
        '#type' => 'textarea',
        '#required' => TRUE,
        '#default_value' => $data['text'],
    );

    $form['actions'] = array('#type' => 'actions');
    $form['actions']['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Submit'),
    );
    $form['actions']['cancel'] = array(
        '#markup' => l(t('Cancel'), 'my_database')
    );

    $form['#validate'][] = 'my_database_insert_form_validate';

    return $form;
}

function my_database_update_form_submit($form, &$form_state)
{
    $id = $form_state['build_info']['args'][0];
    $values = $form_state['values'];

    $query = db_update('my_database')
        ->fields(array(
            'number' => $values['number'],
            'teaser' => $values['teaser'],
            'text' => $values['text'],
        ))
        ->condition('id', $id)
        ->execute();

    if ($query) {
        drupal_set_message(t('Data updated successfully'));
    } else {
        drupal_set_message(t('Data is not updated'), 'warning');
    }

    $form_state['redirect'] = 'my_database';
}

function my_database_table_data_page()
{
    $header = array(t('ID'), t('Number'), t('Teaser'), t('Text'), t('Actions'));
    $rows = array();
    $query = db_select('my_database', 't')
        ->fields('t', array('id', 'number', 'teaser', 'text'))
        ->orderBy('id', 'ASC')
        ->execute();
    while ($value = $query->fetchAssoc()) {

        $value['operation'] = l(t('Edit'), 'my_database/' . $value['id'] . '/update');
        $value['operation'] .= "|";
        $value['operation'] .= l(t('Delete'), 'my_database/' . $value['id'] . '/delete');

        $rows[] = array(
            $value['id'],
            $value['number'],
            $value['teaser'],
            $value['text'],
            $value['operation'],
        );
    }
    return theme('table', array('header' => $header, 'rows' => $rows));
}

function my_database_delete_form($form, $form_state)
{
    $form = array();
    $form['submit'] = array(
        '#description' => t('Row has been deleted from database!'),
        '#type' => 'submit',
        '#value' => t('Submit'),
    );
    $form['cancel'] = array(
        '#markup' => l(t('Cancel'), 'my_database'),
    );
    return $form;
}

function my_database_delete_form_submit($form, &$form_state)
{
    $id = $form_state['build_info']['args'][0];
    $result = db_delete('my_database')
        ->condition('id', $id)
        ->execute();
    $placeholders = array('@id' => $id);
    if ($result) {
        drupal_set_message(t('Record @id successfully removed.', $placeholders));
    } else {
        drupal_set_message(t('Record @id is undefined.', $placeholders), 'warning');
    }
    $form_state['redirect'] = 'my_database';
}
